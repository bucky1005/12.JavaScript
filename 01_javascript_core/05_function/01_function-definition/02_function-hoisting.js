/* 02. function hoisting(함수 호이스팅) */
/*
  자바스크립트는 인터프리터 언어로 순차적으로 한 줄 한줄 해석이 되지만,
  함수 호이스팅 기능으로 함수에 이름을 설정해주면, 해당 함수를 가장 먼저 해석한다.
 */

console.log(hello('이몽룡'));
// console.log(hi('방가'));         // hi는 함수 호이스팅 x, 실행 시 에러남

/* 함수선언문(js 코드 상에서 먼저 해석됨, 반드시 이름이 있어야함(익명함수는 안됨)) */
function hello(name) {
    return `${name}님 반갑습니다!`;
}

/* 함수 표현식(호이스팅 방식 적용 안됨(함수 이름 x)) */
var hi = function(name) {
    return `${name} 안녕!`;
}

console.log(`함수 표현식 이후: ${hi('나중에')}`);

/**
  함수 선언문은 런타임 이전 자바스크립트 엔진에 의해 먼저 해석된다.
  따라서 함수 선언문 이전에 함수를 참조할 수 있으며 호출할 수ㅗㄷ 있다.
  함수 선언문이 코드의 선두로 끌어 올려진 것처럼 동작하는 자바스크립트
  고유의 특징을 '호이스팅'이라고 한다.
 */